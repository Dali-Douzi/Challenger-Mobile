rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ── Top-level scrims collection ─────────────────────
    match /scrims/{scrimId} {
      allow read:   if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      // any signed-in user can update (e.g. send requests, book)
      allow update: if request.auth.uid != null;
      // only the scrim’s creator (ownerUid) can delete
      allow delete: if request.auth.uid == resource.data.ownerUid;
    }

    // ── ANY “teams” subcollection for collectionGroup lookups ──
    match /{path=**}/teams/{teamId} {
      allow read: if request.auth.uid != null;
    }

    // ── Users’ own teams ───────────────────────────────────
    match /users/{userId}/teams/{teamId} {
      allow read:   if request.auth.uid == userId;
      allow create: if request.auth.uid == userId
        || exists(/databases/$(database)/documents/users/$(request.auth.uid)/teams/$(teamId));
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId
        || get(/databases/$(database)/documents/users/$(userId)/teams/$(teamId)).data.ownerUid == request.auth.uid;
    }

    // ── Memberships within each team ──────────────────────
    match /users/{ownerUid}/teams/{teamId}/members/{memberUid} {
      allow create: if request.auth.uid == ownerUid
        || request.auth.uid == memberUid;
      allow update: if request.auth.uid == ownerUid;
      allow delete: if request.auth.uid == ownerUid
        || request.auth.uid == memberUid;
    }
  }
}
